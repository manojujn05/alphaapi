{"version":3,"sources":["Components/login.js","Components/register.js","Components/Search.js","Components/Profile.js","Components/Stock.js","App.js","serviceWorker.js","index.js"],"names":["LoginScreen","props","onLogin","e","preventDefault","state","username","password","axios","method","data","url","then","res","console","log","window","localStorage","setItem","status","setState","success","error","history","push","catch","response","message","onChange","target","name","value","token","getItem","className","onSubmit","this","type","placeholder","required","to","Component","REGAPI","RegisterScreen","firstname","lastname","onSignup","Search","stockName","event","searchProfile","submitForm","bind","Profile","userdata","userData","Name","High","Low","Outstanding","EPS","MarketCap","StockScreen","Symbol","AssetType","notFound","stock","finalURL","post","SharesOutstanding","MarketCapitalization","getProfile","clear","location","href","onClick","logout","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58fd9000.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst LOGINAPI = 'http://139.59.47.100/login'\r\n// const LOGINAPI = 'http://localhost:4000/login'\r\nexport class LoginScreen extends Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n        let token = localStorage.getItem('isAuthenticated');\r\n        this.state = { success: false, error: false };\r\n        if (token) {\r\n            console.log(\"You can't login if you are logged in!\")\r\n             props.history.push(\"/stock\");\r\n        }\r\n    }\r\n\r\n    onLogin = (e) => {\r\n        e.preventDefault();\r\n        const { username, password } = this.state;\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                username,\r\n                password\r\n            },\r\n            url: `${LOGINAPI}`,\r\n        }).then((res) => {\r\n            console.log(res)\r\n            window.localStorage.setItem(\"isAuthenticated\", true);\r\n            if (res.status === 200) {\r\n                this.setState({ success: true, error: false });\r\n                this.props.history.push(\"/stock\");\r\n            }else{\r\n                this.setState({ success: false, error: true });\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }).catch(({ response }) => {\r\n            this.setState({ error: response.data.message, success: false });\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: false,\r\n            success: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3><center>Login</center></h3>\r\n                        <form onSubmit={this.onLogin}>\r\n                            {this.state.success}\r\n                            {this.state.error}\r\n                            <div className=\"form-group\">\r\n                                <label>UserName</label>\r\n                                <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <p className=\"mt-2\">\r\n                                Donâ€™t have an account? Sign up?{\" \"}\r\n                                <Link to={\"/register\"}>Register</Link>\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginScreen;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst REGAPI = 'http://139.59.47.100/register'\r\n// const REGAPI = 'http://localhost:4000/register'\r\nexport class RegisterScreen extends Component {\r\n    state = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        success: false,\r\n        error: false,\r\n    };\r\n\r\n    onSignup = (e) => {\r\n        e.preventDefault();\r\n        const { firstname, lastname, username, password } = this.state;\r\n        axios({\r\n            method: \"POST\",\r\n            data: {\r\n                firstname,\r\n                lastname,\r\n                username,\r\n                password\r\n            },\r\n            url: `${REGAPI}`,\r\n        }).then((res) => {\r\n            console.log(res)\r\n            window.localStorage.setItem(\"isAuthenticated\", true);\r\n            if (res.status === 200) {\r\n                this.setState({ success: true, error: false });\r\n                this.props.history.push(\"/stock\");\r\n            }\r\n        }).catch(({ response }) => {\r\n            this.setState({ error: response.data.message, success: false });\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: false,\r\n            success: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { error, success } = this.state;\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3><center>Register</center></h3>\r\n                        <form onSubmit={this.onSignup}>\r\n                            {success && \"You've registered in successfully\"}\r\n                            {error}\r\n                            <div className=\"form-group\">\r\n                                <label>First Name</label>\r\n                                <input  name=\"firstname\" type=\"text\" className=\"form-control\" placeholder=\"Enter your first name\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Last Name</label>\r\n                                <input  name=\"lastname\" type=\"text\" className=\"form-control\" placeholder=\"Enter your last name\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>UserName</label>\r\n                                <input name=\"username\" type=\"text\" className=\"form-control\" placeholder=\"Enter username\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.onChange} required/>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <p className=\"mt-2\">\r\n                                Already have an account? <Link to={\"/login\"}>Login</Link>\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterScreen;","import React, { Component } from 'react';\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stockName: ''\r\n        };\r\n    }\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        let value = this.state.stockName;\r\n         this.props.searchProfile(value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search-box\">\r\n                <form onSubmit={this.submitForm.bind(this)}>\r\n                    <h3><center><label>Search your stock</label></center></h3><br/>\r\n                    <input type=\"text\" className=\"form-control\" value={this.state.stockName} onChange={(value) => this.setState({ stockName: value.target.value })} placeholder=\"Enter Stock Symbol and hit enter\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nclass Profile extends Component {\r\n    render() {\r\n        let userdata = this.props.userData;\r\n        if (userdata.message === \"Not Found\") {\r\n            return (\r\n                <div className=\"notfound\">\r\n                    <h2>Heyyyyy</h2>\r\n                    <p>Are you sure, for whom you are looking for ???</p>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"card\" >\r\n                    <div className=\"card-header\">\r\n                    {userdata.Name}\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"> <i> 52WeekHigh : {userdata.High}</i></li>\r\n                        <li className=\"list-group-item\"><i> 52WeekLow : {userdata.Low}</i></li>\r\n                        <li className=\"list-group-item\">   <i>Outstanding Shares : {userdata.Outstanding}</i> </li>\r\n                        <li className=\"list-group-item\"> <i> EPS : {userdata.EPS}</i></li>\r\n                        <li className=\"list-group-item\"><i> MarketCap : {userdata.MarketCap}</i></li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Search from './Search';\r\nimport Profile from './Profile';\r\nimport { Link } from \"react-router-dom\";\r\nconst API = 'http://139.59.47.100/stock'\r\n// const API = 'http://localhost:4000/stock'\r\n\r\nexport class StockScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Symbol: 'IBM',\r\n            AssetType: '',\r\n            Name: '',\r\n            notFound: ''\r\n        };\r\n    }\r\n\r\n    getProfile(stock) {\r\n        let finalURL = `${API}`;\r\n        if (!stock) {\r\n            stock = 'IBM'\r\n        }\r\n        axios.post(finalURL, {\r\n            'stock': stock\r\n        })\r\n            .then((res) => res.data)\r\n            .then((data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                    Symbol: 'IBM',\r\n                    Name: data.Name,\r\n                    High: data['52WeekHigh'],\r\n                    Low: data['52WeekLow'],\r\n                    Outstanding: data.SharesOutstanding,\r\n                    EPS: data.EPS,\r\n                    MarketCap: data.MarketCapitalization,\r\n                    notFound: data.message\r\n                })\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProfile(this.state.stock);\r\n    }\r\n    logout() {\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                        <Search searchProfile={this.getProfile.bind(this)} />\r\n                        <Profile userData={this.state} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    <div className=\"col-md-6\">\r\n                       <center> <Link to=\"/logout\" onClick={() => this.logout()}>Logout</Link> </center> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockScreen;","import React,  { Component } from \"react\";\r\n// import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { LoginScreen } from \"./Components/login\";\r\nimport { RegisterScreen } from \"./Components/register\";\r\nimport { StockScreen } from \"./Components/Stock\";\r\n\r\nexport default class App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n      <Router>\r\n        <Switch>\r\n        <Route path=\"/stock\" component={StockScreen} />\r\n        <Route path=\"/login\" component={LoginScreen} />\r\n        <Route path=\"/register\" component={RegisterScreen} />\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}